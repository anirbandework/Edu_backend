"""Add comprehensive notification system with bulk operations

Revision ID: dce8cb71ac3c
Revises: cf27b6d16a7f
Create Date: 2025-10-15 00:02:47.141530

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'dce8cb71ac3c'
down_revision: Union[str, None] = 'cf27b6d16a7f'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('notification_batches',
    sa.Column('tenant_id', sa.UUID(), nullable=False),
    sa.Column('created_by', sa.UUID(), nullable=False),
    sa.Column('created_by_type', sa.Enum('SCHOOL_AUTHORITY', 'TEACHER', 'SYSTEM', 'ADMIN', name='sendertype'), nullable=False),
    sa.Column('batch_name', sa.String(length=100), nullable=False),
    sa.Column('batch_type', sa.String(length=20), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('total_notifications', sa.Integer(), nullable=True),
    sa.Column('processed_count', sa.Integer(), nullable=True),
    sa.Column('success_count', sa.Integer(), nullable=True),
    sa.Column('failed_count', sa.Integer(), nullable=True),
    sa.Column('started_at', sa.DateTime(), nullable=True),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.Column('estimated_completion', sa.DateTime(), nullable=True),
    sa.Column('batch_config', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('progress_percentage', sa.Integer(), nullable=True),
    sa.Column('current_phase', sa.String(length=50), nullable=True),
    sa.Column('results_summary', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('error_log', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenants.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_notification_batches_id'), 'notification_batches', ['id'], unique=False)
    op.create_index(op.f('ix_notification_batches_tenant_id'), 'notification_batches', ['tenant_id'], unique=False)
    op.create_table('notification_groups',
    sa.Column('tenant_id', sa.UUID(), nullable=False),
    sa.Column('created_by', sa.UUID(), nullable=False),
    sa.Column('created_by_type', sa.Enum('SCHOOL_AUTHORITY', 'TEACHER', 'SYSTEM', 'ADMIN', name='sendertype'), nullable=False),
    sa.Column('group_name', sa.String(length=100), nullable=False),
    sa.Column('group_code', sa.String(length=50), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('group_color', sa.String(length=7), nullable=True),
    sa.Column('group_type', sa.String(length=20), nullable=False),
    sa.Column('members', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('criteria', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('total_members', sa.Integer(), nullable=True),
    sa.Column('active_members', sa.Integer(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_public', sa.Boolean(), nullable=True),
    sa.Column('access_level', sa.String(length=20), nullable=True),
    sa.Column('last_refreshed_at', sa.DateTime(), nullable=True),
    sa.Column('auto_refresh_interval', sa.Integer(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenants.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_notification_groups_id'), 'notification_groups', ['id'], unique=False)
    op.create_index(op.f('ix_notification_groups_tenant_id'), 'notification_groups', ['tenant_id'], unique=False)
    op.create_table('notification_preferences',
    sa.Column('tenant_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('user_type', sa.String(length=20), nullable=False),
    sa.Column('notification_type', sa.Enum('ANNOUNCEMENT', 'URGENT', 'ASSIGNMENT', 'GRADE', 'ATTENDANCE', 'EVENT', 'REMINDER', 'DISCIPLINARY', 'SYSTEM', 'PERSONAL', 'MAINTENANCE', 'HOLIDAY', name='notificationtype'), nullable=False),
    sa.Column('email_enabled', sa.Boolean(), nullable=True),
    sa.Column('sms_enabled', sa.Boolean(), nullable=True),
    sa.Column('push_enabled', sa.Boolean(), nullable=True),
    sa.Column('in_app_enabled', sa.Boolean(), nullable=True),
    sa.Column('whatsapp_enabled', sa.Boolean(), nullable=True),
    sa.Column('channel_preferences', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('quiet_hours_start', sa.String(length=5), nullable=True),
    sa.Column('quiet_hours_end', sa.String(length=5), nullable=True),
    sa.Column('timezone', sa.String(length=50), nullable=True),
    sa.Column('max_daily_notifications', sa.Integer(), nullable=True),
    sa.Column('max_weekly_digest', sa.Boolean(), nullable=True),
    sa.Column('digest_day', sa.String(length=10), nullable=True),
    sa.Column('min_priority', sa.Enum('LOW', 'NORMAL', 'HIGH', 'URGENT', 'CRITICAL', name='notificationpriority'), nullable=True),
    sa.Column('keywords_filter', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('sender_whitelist', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('sender_blacklist', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenants.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_notification_preferences_id'), 'notification_preferences', ['id'], unique=False)
    op.create_index(op.f('ix_notification_preferences_tenant_id'), 'notification_preferences', ['tenant_id'], unique=False)
    op.create_index(op.f('ix_notification_preferences_user_id'), 'notification_preferences', ['user_id'], unique=False)
    op.create_table('notification_templates',
    sa.Column('tenant_id', sa.UUID(), nullable=False),
    sa.Column('created_by', sa.UUID(), nullable=False),
    sa.Column('created_by_type', sa.Enum('SCHOOL_AUTHORITY', 'TEACHER', 'SYSTEM', 'ADMIN', name='sendertype'), nullable=False),
    sa.Column('template_name', sa.String(length=100), nullable=False),
    sa.Column('template_code', sa.String(length=50), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('version', sa.String(length=10), nullable=True),
    sa.Column('subject_template', sa.String(length=200), nullable=False),
    sa.Column('body_template', sa.Text(), nullable=False),
    sa.Column('short_message_template', sa.String(length=500), nullable=True),
    sa.Column('notification_type', sa.Enum('ANNOUNCEMENT', 'URGENT', 'ASSIGNMENT', 'GRADE', 'ATTENDANCE', 'EVENT', 'REMINDER', 'DISCIPLINARY', 'SYSTEM', 'PERSONAL', 'MAINTENANCE', 'HOLIDAY', name='notificationtype'), nullable=False),
    sa.Column('default_priority', sa.Enum('LOW', 'NORMAL', 'HIGH', 'URGENT', 'CRITICAL', name='notificationpriority'), nullable=True),
    sa.Column('supported_channels', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('template_variables', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('sample_data', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('validation_rules', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_system_template', sa.Boolean(), nullable=True),
    sa.Column('usage_count', sa.Integer(), nullable=True),
    sa.Column('category', sa.String(length=50), nullable=True),
    sa.Column('tags', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenants.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_notification_templates_id'), 'notification_templates', ['id'], unique=False)
    op.create_index(op.f('ix_notification_templates_template_code'), 'notification_templates', ['template_code'], unique=False)
    op.create_index(op.f('ix_notification_templates_tenant_id'), 'notification_templates', ['tenant_id'], unique=False)
    op.create_table('notifications',
    sa.Column('tenant_id', sa.UUID(), nullable=False),
    sa.Column('sender_id', sa.UUID(), nullable=False),
    sa.Column('sender_type', sa.Enum('SCHOOL_AUTHORITY', 'TEACHER', 'SYSTEM', 'ADMIN', name='sendertype'), nullable=False),
    sa.Column('title', sa.String(length=200), nullable=False),
    sa.Column('message', sa.Text(), nullable=False),
    sa.Column('short_message', sa.String(length=500), nullable=True),
    sa.Column('notification_type', sa.Enum('ANNOUNCEMENT', 'URGENT', 'ASSIGNMENT', 'GRADE', 'ATTENDANCE', 'EVENT', 'REMINDER', 'DISCIPLINARY', 'SYSTEM', 'PERSONAL', 'MAINTENANCE', 'HOLIDAY', name='notificationtype'), nullable=False),
    sa.Column('priority', sa.Enum('LOW', 'NORMAL', 'HIGH', 'URGENT', 'CRITICAL', name='notificationpriority'), nullable=True),
    sa.Column('recipient_type', sa.Enum('INDIVIDUAL', 'CLASS', 'GRADE', 'ALL_STUDENTS', 'ALL_TEACHERS', 'ALL_STAFF', 'DEPARTMENT', 'CUSTOM_GROUP', 'PARENTS', 'ALL_USERS', name='recipienttype'), nullable=False),
    sa.Column('recipient_config', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('delivery_channels', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('scheduled_at', sa.DateTime(), nullable=True),
    sa.Column('expires_at', sa.DateTime(), nullable=True),
    sa.Column('attachments', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('action_url', sa.String(length=500), nullable=True),
    sa.Column('action_text', sa.String(length=100), nullable=True),
    sa.Column('rich_content', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('total_recipients', sa.Integer(), nullable=True),
    sa.Column('delivered_count', sa.Integer(), nullable=True),
    sa.Column('read_count', sa.Integer(), nullable=True),
    sa.Column('failed_count', sa.Integer(), nullable=True),
    sa.Column('clicked_count', sa.Integer(), nullable=True),
    sa.Column('status', sa.Enum('DRAFT', 'SCHEDULED', 'SENT', 'DELIVERED', 'READ', 'ARCHIVED', 'FAILED', 'CANCELLED', name='notificationstatus'), nullable=True),
    sa.Column('sent_at', sa.DateTime(), nullable=True),
    sa.Column('delivery_started_at', sa.DateTime(), nullable=True),
    sa.Column('delivery_completed_at', sa.DateTime(), nullable=True),
    sa.Column('category', sa.String(length=50), nullable=True),
    sa.Column('tags', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('extra_data', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('academic_year', sa.String(length=10), nullable=True),
    sa.Column('term', sa.String(length=20), nullable=True),
    sa.Column('subject_id', sa.UUID(), nullable=True),
    sa.Column('class_id', sa.UUID(), nullable=True),
    sa.Column('auto_delete_at', sa.DateTime(), nullable=True),
    sa.Column('auto_archive_at', sa.DateTime(), nullable=True),
    sa.Column('open_rate', sa.Integer(), nullable=True),
    sa.Column('click_rate', sa.Integer(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenants.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_notifications_id'), 'notifications', ['id'], unique=False)
    op.create_index(op.f('ix_notifications_sender_id'), 'notifications', ['sender_id'], unique=False)
    op.create_index(op.f('ix_notifications_tenant_id'), 'notifications', ['tenant_id'], unique=False)
    op.create_table('notification_delivery_logs',
    sa.Column('tenant_id', sa.UUID(), nullable=False),
    sa.Column('notification_id', sa.UUID(), nullable=False),
    sa.Column('recipient_id', sa.UUID(), nullable=False),
    sa.Column('channel', sa.Enum('IN_APP', 'EMAIL', 'SMS', 'PUSH', 'WHATSAPP', 'SLACK', name='deliverychannel'), nullable=False),
    sa.Column('delivery_attempt', sa.Integer(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('attempted_at', sa.DateTime(), nullable=False),
    sa.Column('delivered_at', sa.DateTime(), nullable=True),
    sa.Column('processed_at', sa.DateTime(), nullable=True),
    sa.Column('channel_identifier', sa.String(length=200), nullable=True),
    sa.Column('external_reference', sa.String(length=100), nullable=True),
    sa.Column('provider', sa.String(length=50), nullable=True),
    sa.Column('error_code', sa.String(length=50), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('retry_count', sa.Integer(), nullable=True),
    sa.Column('next_retry_at', sa.DateTime(), nullable=True),
    sa.Column('response_data', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('delivery_cost', sa.Integer(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['notification_id'], ['notifications.id'], ),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenants.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_notification_delivery_logs_id'), 'notification_delivery_logs', ['id'], unique=False)
    op.create_index(op.f('ix_notification_delivery_logs_notification_id'), 'notification_delivery_logs', ['notification_id'], unique=False)
    op.create_index(op.f('ix_notification_delivery_logs_recipient_id'), 'notification_delivery_logs', ['recipient_id'], unique=False)
    op.create_index(op.f('ix_notification_delivery_logs_tenant_id'), 'notification_delivery_logs', ['tenant_id'], unique=False)
    op.create_table('notification_recipients',
    sa.Column('tenant_id', sa.UUID(), nullable=False),
    sa.Column('notification_id', sa.UUID(), nullable=False),
    sa.Column('recipient_id', sa.UUID(), nullable=False),
    sa.Column('recipient_type', sa.String(length=20), nullable=False),
    sa.Column('recipient_name', sa.String(length=200), nullable=True),
    sa.Column('recipient_email', sa.String(length=200), nullable=True),
    sa.Column('recipient_phone', sa.String(length=20), nullable=True),
    sa.Column('status', sa.Enum('DRAFT', 'SCHEDULED', 'SENT', 'DELIVERED', 'READ', 'ARCHIVED', 'FAILED', 'CANCELLED', name='notificationstatus'), nullable=True),
    sa.Column('delivered_at', sa.DateTime(), nullable=True),
    sa.Column('read_at', sa.DateTime(), nullable=True),
    sa.Column('clicked_at', sa.DateTime(), nullable=True),
    sa.Column('delivery_status', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('preferred_channels', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('is_starred', sa.Boolean(), nullable=True),
    sa.Column('is_archived', sa.Boolean(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.Column('is_pinned', sa.Boolean(), nullable=True),
    sa.Column('has_responded', sa.Boolean(), nullable=True),
    sa.Column('response_data', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('interaction_count', sa.Integer(), nullable=True),
    sa.Column('device_info', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('last_seen_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['notification_id'], ['notifications.id'], ),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenants.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_notification_recipients_id'), 'notification_recipients', ['id'], unique=False)
    op.create_index(op.f('ix_notification_recipients_notification_id'), 'notification_recipients', ['notification_id'], unique=False)
    op.create_index(op.f('ix_notification_recipients_recipient_id'), 'notification_recipients', ['recipient_id'], unique=False)
    op.create_index(op.f('ix_notification_recipients_tenant_id'), 'notification_recipients', ['tenant_id'], unique=False)
    op.create_table('notification_schedules',
    sa.Column('tenant_id', sa.UUID(), nullable=False),
    sa.Column('notification_template_id', sa.UUID(), nullable=False),
    sa.Column('created_by', sa.UUID(), nullable=False),
    sa.Column('schedule_name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('schedule_type', sa.String(length=20), nullable=False),
    sa.Column('start_date', sa.DateTime(), nullable=False),
    sa.Column('end_date', sa.DateTime(), nullable=True),
    sa.Column('recurrence_pattern', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('timezone', sa.String(length=50), nullable=True),
    sa.Column('recipient_config', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('next_run', sa.DateTime(), nullable=True),
    sa.Column('last_run', sa.DateTime(), nullable=True),
    sa.Column('run_count', sa.Integer(), nullable=True),
    sa.Column('max_runs', sa.Integer(), nullable=True),
    sa.Column('max_failures', sa.Integer(), nullable=True),
    sa.Column('failure_count', sa.Integer(), nullable=True),
    sa.Column('last_error', sa.Text(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['notification_template_id'], ['notification_templates.id'], ),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenants.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_notification_schedules_id'), 'notification_schedules', ['id'], unique=False)
    op.create_index(op.f('ix_notification_schedules_tenant_id'), 'notification_schedules', ['tenant_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_notification_schedules_tenant_id'), table_name='notification_schedules')
    op.drop_index(op.f('ix_notification_schedules_id'), table_name='notification_schedules')
    op.drop_table('notification_schedules')
    op.drop_index(op.f('ix_notification_recipients_tenant_id'), table_name='notification_recipients')
    op.drop_index(op.f('ix_notification_recipients_recipient_id'), table_name='notification_recipients')
    op.drop_index(op.f('ix_notification_recipients_notification_id'), table_name='notification_recipients')
    op.drop_index(op.f('ix_notification_recipients_id'), table_name='notification_recipients')
    op.drop_table('notification_recipients')
    op.drop_index(op.f('ix_notification_delivery_logs_tenant_id'), table_name='notification_delivery_logs')
    op.drop_index(op.f('ix_notification_delivery_logs_recipient_id'), table_name='notification_delivery_logs')
    op.drop_index(op.f('ix_notification_delivery_logs_notification_id'), table_name='notification_delivery_logs')
    op.drop_index(op.f('ix_notification_delivery_logs_id'), table_name='notification_delivery_logs')
    op.drop_table('notification_delivery_logs')
    op.drop_index(op.f('ix_notifications_tenant_id'), table_name='notifications')
    op.drop_index(op.f('ix_notifications_sender_id'), table_name='notifications')
    op.drop_index(op.f('ix_notifications_id'), table_name='notifications')
    op.drop_table('notifications')
    op.drop_index(op.f('ix_notification_templates_tenant_id'), table_name='notification_templates')
    op.drop_index(op.f('ix_notification_templates_template_code'), table_name='notification_templates')
    op.drop_index(op.f('ix_notification_templates_id'), table_name='notification_templates')
    op.drop_table('notification_templates')
    op.drop_index(op.f('ix_notification_preferences_user_id'), table_name='notification_preferences')
    op.drop_index(op.f('ix_notification_preferences_tenant_id'), table_name='notification_preferences')
    op.drop_index(op.f('ix_notification_preferences_id'), table_name='notification_preferences')
    op.drop_table('notification_preferences')
    op.drop_index(op.f('ix_notification_groups_tenant_id'), table_name='notification_groups')
    op.drop_index(op.f('ix_notification_groups_id'), table_name='notification_groups')
    op.drop_table('notification_groups')
    op.drop_index(op.f('ix_notification_batches_tenant_id'), table_name='notification_batches')
    op.drop_index(op.f('ix_notification_batches_id'), table_name='notification_batches')
    op.drop_table('notification_batches')
    # ### end Alembic commands ###
