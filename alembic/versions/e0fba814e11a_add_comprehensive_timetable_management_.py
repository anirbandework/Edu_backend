"""Add comprehensive timetable management system with conflict detection

Revision ID: e0fba814e11a
Revises: 437fcbfc2777
Create Date: 2025-10-15 03:31:48.078984

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'e0fba814e11a'
down_revision: Union[str, None] = '437fcbfc2777'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('master_timetables',
    sa.Column('tenant_id', sa.UUID(), nullable=False),
    sa.Column('created_by', sa.UUID(), nullable=False),
    sa.Column('timetable_name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('academic_year', sa.String(length=10), nullable=False),
    sa.Column('term', sa.String(length=20), nullable=True),
    sa.Column('version', sa.String(length=10), nullable=True),
    sa.Column('effective_from', sa.Date(), nullable=False),
    sa.Column('effective_until', sa.Date(), nullable=True),
    sa.Column('total_periods_per_day', sa.Integer(), nullable=True),
    sa.Column('total_working_days', sa.Integer(), nullable=True),
    sa.Column('school_start_time', sa.Time(), nullable=False),
    sa.Column('school_end_time', sa.Time(), nullable=False),
    sa.Column('period_duration', sa.Integer(), nullable=True),
    sa.Column('break_duration', sa.Integer(), nullable=True),
    sa.Column('lunch_duration', sa.Integer(), nullable=True),
    sa.Column('working_days', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('holidays', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('status', sa.Enum('DRAFT', 'ACTIVE', 'SUSPENDED', 'ARCHIVED', 'PENDING_APPROVAL', name='timetablestatus'), nullable=False),
    sa.Column('is_default', sa.Boolean(), nullable=True),
    sa.Column('approved_by', sa.UUID(), nullable=True),
    sa.Column('approved_at', sa.DateTime(), nullable=True),
    sa.Column('auto_generate_periods', sa.Boolean(), nullable=True),
    sa.Column('conflict_check_enabled', sa.Boolean(), nullable=True),
    sa.Column('total_classes', sa.Integer(), nullable=True),
    sa.Column('total_teachers', sa.Integer(), nullable=True),
    sa.Column('total_schedule_entries', sa.Integer(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenants.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_master_timetables_academic_year'), 'master_timetables', ['academic_year'], unique=False)
    op.create_index(op.f('ix_master_timetables_created_by'), 'master_timetables', ['created_by'], unique=False)
    op.create_index(op.f('ix_master_timetables_id'), 'master_timetables', ['id'], unique=False)
    op.create_index(op.f('ix_master_timetables_tenant_id'), 'master_timetables', ['tenant_id'], unique=False)
    op.create_table('subjects',
    sa.Column('tenant_id', sa.UUID(), nullable=False),
    sa.Column('subject_name', sa.String(length=100), nullable=False),
    sa.Column('subject_code', sa.String(length=20), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('grade_levels', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('subject_category', sa.String(length=50), nullable=True),
    sa.Column('periods_per_week', sa.Integer(), nullable=True),
    sa.Column('requires_lab', sa.Boolean(), nullable=True),
    sa.Column('requires_special_room', sa.Boolean(), nullable=True),
    sa.Column('max_students_per_class', sa.Integer(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('color_code', sa.String(length=7), nullable=True),
    sa.Column('academic_year', sa.String(length=10), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenants.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_subjects_id'), 'subjects', ['id'], unique=False)
    op.create_index(op.f('ix_subjects_tenant_id'), 'subjects', ['tenant_id'], unique=False)
    op.create_table('timetable_audit_logs',
    sa.Column('tenant_id', sa.UUID(), nullable=False),
    sa.Column('action_type', sa.String(length=50), nullable=False),
    sa.Column('entity_type', sa.String(length=50), nullable=False),
    sa.Column('entity_id', sa.UUID(), nullable=False),
    sa.Column('performed_by', sa.UUID(), nullable=False),
    sa.Column('performed_by_name', sa.String(length=200), nullable=True),
    sa.Column('user_role', sa.String(length=50), nullable=True),
    sa.Column('old_values', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('new_values', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('change_description', sa.Text(), nullable=True),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.Column('user_agent', sa.String(length=500), nullable=True),
    sa.Column('session_id', sa.String(length=100), nullable=True),
    sa.Column('action_timestamp', sa.DateTime(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenants.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_timetable_audit_logs_id'), 'timetable_audit_logs', ['id'], unique=False)
    op.create_index(op.f('ix_timetable_audit_logs_tenant_id'), 'timetable_audit_logs', ['tenant_id'], unique=False)
    op.create_table('timetable_templates',
    sa.Column('tenant_id', sa.UUID(), nullable=False),
    sa.Column('created_by', sa.UUID(), nullable=False),
    sa.Column('template_name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('template_type', sa.String(length=50), nullable=True),
    sa.Column('grade_levels', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('template_data', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('usage_count', sa.Integer(), nullable=True),
    sa.Column('last_used', sa.DateTime(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_public', sa.Boolean(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenants.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_timetable_templates_id'), 'timetable_templates', ['id'], unique=False)
    op.create_index(op.f('ix_timetable_templates_tenant_id'), 'timetable_templates', ['tenant_id'], unique=False)
    op.create_table('class_timetables',
    sa.Column('tenant_id', sa.UUID(), nullable=False),
    sa.Column('class_id', sa.UUID(), nullable=False),
    sa.Column('master_timetable_id', sa.UUID(), nullable=False),
    sa.Column('academic_year', sa.String(length=10), nullable=False),
    sa.Column('term', sa.String(length=20), nullable=True),
    sa.Column('class_name', sa.String(length=100), nullable=True),
    sa.Column('grade_level', sa.String(length=20), nullable=True),
    sa.Column('total_subjects', sa.Integer(), nullable=True),
    sa.Column('total_weekly_periods', sa.Integer(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_by', sa.UUID(), nullable=True),
    sa.Column('approved_by', sa.UUID(), nullable=True),
    sa.Column('approval_date', sa.DateTime(), nullable=True),
    sa.Column('last_modified_by', sa.UUID(), nullable=True),
    sa.Column('is_published', sa.Boolean(), nullable=True),
    sa.Column('published_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['master_timetable_id'], ['master_timetables.id'], ),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenants.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('class_id', 'academic_year', 'term', name='unique_class_timetable')
    )
    op.create_index(op.f('ix_class_timetables_class_id'), 'class_timetables', ['class_id'], unique=False)
    op.create_index(op.f('ix_class_timetables_id'), 'class_timetables', ['id'], unique=False)
    op.create_index(op.f('ix_class_timetables_master_timetable_id'), 'class_timetables', ['master_timetable_id'], unique=False)
    op.create_index(op.f('ix_class_timetables_tenant_id'), 'class_timetables', ['tenant_id'], unique=False)
    op.create_table('periods',
    sa.Column('tenant_id', sa.UUID(), nullable=False),
    sa.Column('master_timetable_id', sa.UUID(), nullable=False),
    sa.Column('period_number', sa.Integer(), nullable=False),
    sa.Column('period_name', sa.String(length=50), nullable=False),
    sa.Column('period_type', sa.Enum('REGULAR', 'BREAK', 'LUNCH', 'ASSEMBLY', 'SPORTS', 'LIBRARY', 'LAB', 'EXAM', 'ACTIVITY', 'STUDY_HALL', name='periodtype'), nullable=False),
    sa.Column('start_time', sa.Time(), nullable=False),
    sa.Column('end_time', sa.Time(), nullable=False),
    sa.Column('duration_minutes', sa.Integer(), nullable=False),
    sa.Column('is_teaching_period', sa.Boolean(), nullable=True),
    sa.Column('allows_substitution', sa.Boolean(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('color_code', sa.String(length=7), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['master_timetable_id'], ['master_timetables.id'], ),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenants.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('master_timetable_id', 'period_number', name='unique_period_per_timetable')
    )
    op.create_index(op.f('ix_periods_id'), 'periods', ['id'], unique=False)
    op.create_index(op.f('ix_periods_master_timetable_id'), 'periods', ['master_timetable_id'], unique=False)
    op.create_index(op.f('ix_periods_tenant_id'), 'periods', ['tenant_id'], unique=False)
    op.create_table('teacher_timetables',
    sa.Column('tenant_id', sa.UUID(), nullable=False),
    sa.Column('teacher_id', sa.UUID(), nullable=False),
    sa.Column('master_timetable_id', sa.UUID(), nullable=False),
    sa.Column('academic_year', sa.String(length=10), nullable=False),
    sa.Column('term', sa.String(length=20), nullable=True),
    sa.Column('teacher_name', sa.String(length=200), nullable=True),
    sa.Column('total_periods_per_week', sa.Integer(), nullable=True),
    sa.Column('max_periods_per_day', sa.Integer(), nullable=True),
    sa.Column('min_periods_per_day', sa.Integer(), nullable=True),
    sa.Column('preferred_periods', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('preferred_days', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('unavailable_slots', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('subjects', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('actual_periods_per_week', sa.Integer(), nullable=True),
    sa.Column('free_periods_per_week', sa.Integer(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('workload_percentage', sa.Integer(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['master_timetable_id'], ['master_timetables.id'], ),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenants.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('teacher_id', 'academic_year', 'term', name='unique_teacher_timetable')
    )
    op.create_index(op.f('ix_teacher_timetables_id'), 'teacher_timetables', ['id'], unique=False)
    op.create_index(op.f('ix_teacher_timetables_master_timetable_id'), 'teacher_timetables', ['master_timetable_id'], unique=False)
    op.create_index(op.f('ix_teacher_timetables_teacher_id'), 'teacher_timetables', ['teacher_id'], unique=False)
    op.create_index(op.f('ix_teacher_timetables_tenant_id'), 'teacher_timetables', ['tenant_id'], unique=False)
    op.create_table('schedule_entries',
    sa.Column('tenant_id', sa.UUID(), nullable=False),
    sa.Column('class_timetable_id', sa.UUID(), nullable=False),
    sa.Column('teacher_timetable_id', sa.UUID(), nullable=True),
    sa.Column('period_id', sa.UUID(), nullable=False),
    sa.Column('subject_id', sa.UUID(), nullable=True),
    sa.Column('day_of_week', sa.Enum('MONDAY', 'TUESDAY', 'WEDNESDAY', 'THURSDAY', 'FRIDAY', 'SATURDAY', 'SUNDAY', name='dayofweek'), nullable=False),
    sa.Column('subject_name', sa.String(length=100), nullable=False),
    sa.Column('subject_code', sa.String(length=20), nullable=True),
    sa.Column('room_number', sa.String(length=20), nullable=True),
    sa.Column('building', sa.String(length=50), nullable=True),
    sa.Column('floor', sa.String(length=10), nullable=True),
    sa.Column('location_notes', sa.Text(), nullable=True),
    sa.Column('room_capacity', sa.Integer(), nullable=True),
    sa.Column('teacher_name', sa.String(length=200), nullable=True),
    sa.Column('is_recurring', sa.Boolean(), nullable=True),
    sa.Column('effective_date', sa.Date(), nullable=True),
    sa.Column('expiry_date', sa.Date(), nullable=True),
    sa.Column('is_substitution', sa.Boolean(), nullable=True),
    sa.Column('original_teacher_id', sa.UUID(), nullable=True),
    sa.Column('original_teacher_name', sa.String(length=200), nullable=True),
    sa.Column('substitution_reason', sa.String(length=200), nullable=True),
    sa.Column('substitution_date', sa.Date(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('attendance_required', sa.Boolean(), nullable=True),
    sa.Column('batch_id', sa.UUID(), nullable=True),
    sa.Column('import_source', sa.String(length=50), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['class_timetable_id'], ['class_timetables.id'], ),
    sa.ForeignKeyConstraint(['period_id'], ['periods.id'], ),
    sa.ForeignKeyConstraint(['subject_id'], ['subjects.id'], ),
    sa.ForeignKeyConstraint(['teacher_timetable_id'], ['teacher_timetables.id'], ),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenants.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('class_timetable_id', 'day_of_week', 'period_id', name='unique_class_day_period')
    )
    op.create_index(op.f('ix_schedule_entries_class_timetable_id'), 'schedule_entries', ['class_timetable_id'], unique=False)
    op.create_index(op.f('ix_schedule_entries_day_of_week'), 'schedule_entries', ['day_of_week'], unique=False)
    op.create_index(op.f('ix_schedule_entries_id'), 'schedule_entries', ['id'], unique=False)
    op.create_index(op.f('ix_schedule_entries_period_id'), 'schedule_entries', ['period_id'], unique=False)
    op.create_index(op.f('ix_schedule_entries_subject_id'), 'schedule_entries', ['subject_id'], unique=False)
    op.create_index(op.f('ix_schedule_entries_teacher_timetable_id'), 'schedule_entries', ['teacher_timetable_id'], unique=False)
    op.create_index(op.f('ix_schedule_entries_tenant_id'), 'schedule_entries', ['tenant_id'], unique=False)
    op.create_table('timetable_conflicts',
    sa.Column('tenant_id', sa.UUID(), nullable=False),
    sa.Column('conflict_type', sa.String(length=50), nullable=False),
    sa.Column('severity', sa.Enum('LOW', 'MEDIUM', 'HIGH', 'CRITICAL', name='conflictseverity'), nullable=False),
    sa.Column('title', sa.String(length=200), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('schedule_entry_1_id', sa.UUID(), nullable=True),
    sa.Column('schedule_entry_2_id', sa.UUID(), nullable=True),
    sa.Column('teacher_id', sa.UUID(), nullable=True),
    sa.Column('class_id', sa.UUID(), nullable=True),
    sa.Column('room_number', sa.String(length=20), nullable=True),
    sa.Column('day_of_week', sa.Enum('MONDAY', 'TUESDAY', 'WEDNESDAY', 'THURSDAY', 'FRIDAY', 'SATURDAY', 'SUNDAY', name='dayofweek'), nullable=True),
    sa.Column('period_number', sa.Integer(), nullable=True),
    sa.Column('conflict_data', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('is_resolved', sa.Boolean(), nullable=True),
    sa.Column('resolution_notes', sa.Text(), nullable=True),
    sa.Column('resolution_action', sa.String(length=100), nullable=True),
    sa.Column('resolved_by', sa.UUID(), nullable=True),
    sa.Column('resolved_date', sa.DateTime(), nullable=True),
    sa.Column('detected_by', sa.String(length=50), nullable=True),
    sa.Column('auto_resolve', sa.Boolean(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['schedule_entry_1_id'], ['schedule_entries.id'], ),
    sa.ForeignKeyConstraint(['schedule_entry_2_id'], ['schedule_entries.id'], ),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenants.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_timetable_conflicts_id'), 'timetable_conflicts', ['id'], unique=False)
    op.create_index(op.f('ix_timetable_conflicts_tenant_id'), 'timetable_conflicts', ['tenant_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_timetable_conflicts_tenant_id'), table_name='timetable_conflicts')
    op.drop_index(op.f('ix_timetable_conflicts_id'), table_name='timetable_conflicts')
    op.drop_table('timetable_conflicts')
    op.drop_index(op.f('ix_schedule_entries_tenant_id'), table_name='schedule_entries')
    op.drop_index(op.f('ix_schedule_entries_teacher_timetable_id'), table_name='schedule_entries')
    op.drop_index(op.f('ix_schedule_entries_subject_id'), table_name='schedule_entries')
    op.drop_index(op.f('ix_schedule_entries_period_id'), table_name='schedule_entries')
    op.drop_index(op.f('ix_schedule_entries_id'), table_name='schedule_entries')
    op.drop_index(op.f('ix_schedule_entries_day_of_week'), table_name='schedule_entries')
    op.drop_index(op.f('ix_schedule_entries_class_timetable_id'), table_name='schedule_entries')
    op.drop_table('schedule_entries')
    op.drop_index(op.f('ix_teacher_timetables_tenant_id'), table_name='teacher_timetables')
    op.drop_index(op.f('ix_teacher_timetables_teacher_id'), table_name='teacher_timetables')
    op.drop_index(op.f('ix_teacher_timetables_master_timetable_id'), table_name='teacher_timetables')
    op.drop_index(op.f('ix_teacher_timetables_id'), table_name='teacher_timetables')
    op.drop_table('teacher_timetables')
    op.drop_index(op.f('ix_periods_tenant_id'), table_name='periods')
    op.drop_index(op.f('ix_periods_master_timetable_id'), table_name='periods')
    op.drop_index(op.f('ix_periods_id'), table_name='periods')
    op.drop_table('periods')
    op.drop_index(op.f('ix_class_timetables_tenant_id'), table_name='class_timetables')
    op.drop_index(op.f('ix_class_timetables_master_timetable_id'), table_name='class_timetables')
    op.drop_index(op.f('ix_class_timetables_id'), table_name='class_timetables')
    op.drop_index(op.f('ix_class_timetables_class_id'), table_name='class_timetables')
    op.drop_table('class_timetables')
    op.drop_index(op.f('ix_timetable_templates_tenant_id'), table_name='timetable_templates')
    op.drop_index(op.f('ix_timetable_templates_id'), table_name='timetable_templates')
    op.drop_table('timetable_templates')
    op.drop_index(op.f('ix_timetable_audit_logs_tenant_id'), table_name='timetable_audit_logs')
    op.drop_index(op.f('ix_timetable_audit_logs_id'), table_name='timetable_audit_logs')
    op.drop_table('timetable_audit_logs')
    op.drop_index(op.f('ix_subjects_tenant_id'), table_name='subjects')
    op.drop_index(op.f('ix_subjects_id'), table_name='subjects')
    op.drop_table('subjects')
    op.drop_index(op.f('ix_master_timetables_tenant_id'), table_name='master_timetables')
    op.drop_index(op.f('ix_master_timetables_id'), table_name='master_timetables')
    op.drop_index(op.f('ix_master_timetables_created_by'), table_name='master_timetables')
    op.drop_index(op.f('ix_master_timetables_academic_year'), table_name='master_timetables')
    op.drop_table('master_timetables')
    # ### end Alembic commands ###
